# MaPHyS compiling configuration flags
#
# This GNU/Make file is included by differents parts of MaPHyS

#--------------------------
# Package informations
#--------------------------

VERSION:=0.1.5

# Which arithmetic should be built
WITH_ARITHS := c d s z
#WITH_ARITHS := d
ARITHS := $(filter c d s z,$(WITH_ARITHS))
# uncomment the following line if you want to keep 
# the generated source files during the compilation
KEEP_GENERATED_SOURCES=YES

# By default if "A" use module "B" 
# the rule "a.o : b.mod" is generated
# 
# you may change that rule to "a.o : | b.mod"
# to avoid recompilations.
# In this mode, you must do a "make clean" before the
# "make", if you change when you interface of module "B"
#
WEAKLY_LINK_OBJECTS2MODULES=YES

# where to install ?
prefix := /usr/local
exec_prefix := $(prefix)
bindir := $(prefix)/bin
includedir := $(prefix)/include
libdir := $(prefix)/lib
moddir := $(prefix)/lib/libmaphys-$(VERSION)_mod

datarootdir := $(prefix)/share
docdir := $(datarootdir)/doc/libmaphys-$(VERSION)
pdfdir := $(docdir)

#--------------------------
# Programs
#--------------------------

# compilers
MPIFC := mpif90
MPICC := mpicc
MPIF77 := mpif77

CC := $(MPICC)
FC := $(MPIFC)
F77 := $(MPIF77)

# for installation
INSTALL := install
INSTALL_PROGRAM := $(INSTALL) 
INSTALL_DATA := $(INSTALL) -m 644

# optional : necessary for the tests
MPIEXEC := mpirun
MPIOPTS := -np 4

# optional : necessary for distribution
TAR := tar
TEXI2PDF := texi2pdf

#--------------------------
# Libraries
#--------------------------

3rdpartyPREFIX := /projets/hiepacs/maphys/thirdparty

# mumps
MUMPS_prefix  :=  $(3rdpartyPREFIX)/mumps/32bits
MUMPS_LIBS := -L${MUMPS_prefix}/lib $(foreach a,$(ARITHS),-l$(a)mumps) -lmumps_common -lpord
MUMPS_FCFLAGS  :=  -DHAVE_LIBMUMPS
MUMPS_FCFLAGS +=  -I${MUMPS_prefix}/include
# uncomment this line if mumps was compiled to use scotch
MUMPS_FCFLAGS += -DLIBMUMPS_USE_LIBSCOTCH


# pastix
PASTIX_topdir := $(3rdpartyPREFIX)/pastix/32bits
PASTIX_FCFLAGS := -DHAVE_LIBPASTIX -I${PASTIX_topdir}/install
PASTIX_LIBS := -L${PASTIX_topdir}/install -lpastix -lrt 

# metis
METIS_topdir := $(3rdpartyPREFIX)/metis/32bits
METIS_CFLAGS := -DHAVE_LIBMETIS -I${METIS_topdir}/Lib
METIS_FCFLAGS := -DHAVE_LIBMETIS -I${METIS_topdir}/Lib
METIS_LIBS := -L${METIS_topdir} -lmetis

# scotch
SCOTCH_prefix := $(3rdpartyPREFIX)/scotch_esmumps/32bits
SCOTCH_LIBS := -L$(SCOTCH_prefix)/lib -lscotch -lscotcherrexit 
SCOTCH_FCFLAGS  :=  -DHAVE_LIBSCOTCH 
SCOTCH_FCFLAGS  +=  -I$(SCOTCH_prefix)/include

ifneq ($(filter $(MUMPS_FCFLAGS),-DLIBMUMPS_USE_LIBSCOTCH),)
SCOTCH_LIBS +=  -lesmumps
endif

# dense_algebra libraries
# must include BLAS,LAPACK + those of MUMPS/PASTIX

# DALGEBRA_PARALLEL_LIBS := -L/usr/lib/ -lscalapack-openmpi -lblacs-openmpi -lblacsF77init-openmpi -lblacs-openmpi
# DALGEBRA_SEQUENTIAL_LIBS := -L${HOME}/opt/atlas/lib -llapack -lf77blas -lcblas -latlas
# DALGEBRA_FCFLAGS := -DHAVE_LIBLAPACK
# DALGEBRA_PRELIBS := 
# DALGEBRA_LIBS  :=  $(DALGEBRA_PARALLEL_LIBS) $(DALGEBRA_SEQUENTIAL_LIBS) -lpthread
# DALGEBRA_POSTLIBS  :=  

LMKLPATH   := /opt/intel/latest/mkl/lib/intel64
DALGEBRA_PARALLEL_LIBS  := $(LMKLPATH)/libmkl_scalapack_lp64.a $(LMKLPATH)/libmkl_solver_lp64.a -Wl,--start-group $(LMKLPATH)/libmkl_intel_lp64.a $(LMKLPATH)/libmkl_intel_thread.a $(LMKLPATH)/libmkl_core.a $(LMKLPATH)/libmkl_blacs_openmpi_lp64.a -Wl,--end-group -openmp -lpthread
DALGEBRA_SEQUENTIAL_LIBS :=  $(LMKLPATH)/libmkl_intel_lp64.a $(LMKLPATH)/libmkl_sequential.a $(LMKLPATH)/libmkl_core.a

# DALGEBRA_PARALLEL_LIBS:=-L/usr/lib/ -lscalapack-openmpi -lblacs-openmpi -lblacsF77init-openmpi -lblacs-openmpi
# DALGEBRA_SEQUENTIAL_LIBS:=-L${HOME}/opt/atlas/lib -llapack -lf77blas -lcblas -latlas
DALGEBRA_FCFLAGS:=-DHAVE_LIBLAPACK
DALGEBRA_PRELIBS:=
DALGEBRA_LIBS := $(DALGEBRA_PARALLEL_LIBS) $(DALGEBRA_SEQUENTIAL_LIBS) -lpthread
DALGEBRA_POSTLIBS := 


# HWLOC
HWLOC_prefix := /usr/share
HWLOC_FCFLAGS := -DHAVE_LIBHWLOC 
HWLOC_FCFLAGS += $(shell pkg-config --cflags hwloc) 
HWLOC_LIBS := $(shell pkg-config --libs hwloc) 

#--------------------------
# Header files
#--------------------------

#--------------------------
# Structures
#--------------------------

#--------------------------
# Compiler characteristics
#--------------------------

MODEXT:= .mod
OBJEXT:= .o

# FFLAGS := -g -check all
# FCFLAGS := -g -check all
FFLAGS := -g -O0
FCFLAGS := -g -O0
LDFLAGS :=

#--------------------------
# Library functions
#--------------------------

ALGO_FCFLAGS  :=  -g -DSCHURV2

# uncomment the following line if you want 
# to print an error on failed checks.
# This option may slow down the execution.
CHECK_FLAGS   :=  -DMAPHYS_BACKTRACE_ERROR

#--------------------------
# System services
#--------------------------

#--------------------------
# Summary
#--------------------------

# ALL_FCFLAGS  :=  $(MAPHYS_FCFLAGS) $(PASTIX_FCFLAGS) $(MUMPS_FCFLAGS) $(DALGEBRA_FCFLAGS) $(LDFLAGS) -I$(topdir)/include -I.

ALL_FFLAGS   :=  $(FFLAGS) $(CHECK_FLAGS)
ALL_FCFLAGS  :=  $(FCFLAGS) -I$(abstopsrcdir)/include -I. $(ALGO_FCFLAGS) $(CHECK_FLAGS)
ALL_LDFLAGS  :=  $(MAPHYS_LIBS) $(PASTIX_LIBS) $(MUMPS_LIBS) $(DALGEBRA_LIBS) $(METIS_LIBS) $(SCOTCH_LIBS) $(HWLOC_LIBS) $(LDFLAGS)
